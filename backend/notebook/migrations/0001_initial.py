# Generated by Django 5.0.2 on 2025-09-21 19:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Title of the notebook', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the notebook', null=True)),
                ('tags', models.JSONField(blank=True, default=list, help_text='List of tags for categorization')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this notebook is active')),
                ('is_pinned', models.BooleanField(default=False, help_text='Whether this notebook is pinned to top')),
                ('created_by', models.ForeignKey(help_text='User who created this notebook', on_delete=django.db.models.deletion.CASCADE, related_name='notebooks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notebook',
                'verbose_name_plural': 'Notebooks',
                'ordering': ['-is_pinned', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='NotebookSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the section', max_length=255)),
                ('content', models.TextField(blank=True, help_text='Content of the section', null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of this section in the notebook')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notebook', models.ForeignKey(help_text='Notebook this section belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='notebook.notebook')),
            ],
            options={
                'verbose_name': 'Notebook Section',
                'verbose_name_plural': 'Notebook Sections',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotebookTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Tag name', max_length=50, unique=True)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code for this tag', max_length=7)),
                ('description', models.TextField(blank=True, help_text='Description of what this tag represents', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of times this tag is used')),
                ('created_by', models.ForeignKey(help_text='User who created this tag', on_delete=django.db.models.deletion.CASCADE, related_name='created_tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notebook Tag',
                'verbose_name_plural': 'Notebook Tags',
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='notebook',
            index=models.Index(fields=['created_by', '-updated_at'], name='notebook_no_created_911852_idx'),
        ),
        migrations.AddIndex(
            model_name='notebook',
            index=models.Index(fields=['is_active', 'is_pinned'], name='notebook_no_is_acti_f0db88_idx'),
        ),
        migrations.AddIndex(
            model_name='notebook',
            index=models.Index(fields=['created_at'], name='notebook_no_created_68db96_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notebooksection',
            unique_together={('notebook', 'order')},
        ),
    ]
